name: Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-
    
    - name: Cache cargo target
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

    - name: Setup test environment  
      run: |
        # Create directory structure for dictionaries
        mkdir -p dictionaries/frequency
        mkdir -p dictionaries/tokenizer
        
        # Set environment variable to indicate we're in CI
        echo "CI_ENVIRONMENT=true" >> $GITHUB_ENV

    - name: Check formatting
      run: cargo +nightly fmt -- --check

    - name: Run tests (excluding external dependency tests)
      run: cargo test --verbose -- --skip dictionary::frequency_manager::tests::test_frequency --skip segmentation::rule_matcher_tests::tests::inspect_tokens
