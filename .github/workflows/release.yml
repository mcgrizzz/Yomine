name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v0.3.0-beta.1)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always
  # Set the tag name based on trigger type
  TAG_NAME: ${{ github.event.release.tag_name || inputs.tag_name }}

jobs:
  build-and-upload:
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-windows-x64.exe
            executable_ext: .exe
            
          - target: x86_64-apple-darwin
            os: macos-latest
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-macos-intel-x64
            executable_ext: ""
            
          - target: aarch64-apple-darwin
            os: macos-latest
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-macos-apple-arm64
            executable_ext: ""
            
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-linux-x64
            executable_ext: ""            
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-
    
    - name: Cache cargo target
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-${{ matrix.target }}-
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    # Linux dependencies for egui
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

    # Build the application
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    # Copy and rename binary to final name
    - name: Prepare binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        copy target\${{ matrix.target }}\release\yomine.exe ${{ matrix.name }}
      shell: cmd

    - name: Prepare binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cp target/${{ matrix.target }}/release/yomine ${{ matrix.name }}
        chmod +x ${{ matrix.name }}
      shell: bash

    # Upload bare binary to release
    - name: Upload binary to release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        files: ${{ matrix.name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Create consolidated checksum file (runs after all binaries are uploaded)
  create-checksums:
    needs: build-and-upload
    runs-on: ubuntu-latest
    
    steps:
    - name: Download release assets
      uses: robinraju/release-downloader@v1.11
      with:        
        repository: ${{ github.repository }}
        tag: ${{ env.TAG_NAME }}
        fileName: "yomine-*"
        out-file-path: "downloads"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate consolidated checksums
      run: |
        cd downloads
        sha256sum yomine-* > ../SHA256SUMS.txt
        echo "Generated checksums:"
        cat ../SHA256SUMS.txt
      shell: bash

    - name: Upload checksums to release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        files: SHA256SUMS.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
