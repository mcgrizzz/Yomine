name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v0.3.0-beta.1)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always
  # Set the tag name based on trigger type
  TAG_NAME: ${{ github.event.release.tag_name || inputs.tag_name }}

jobs:
  build-and-upload:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-windows-x64.exe
            
          - os-name: macOS-x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-macos-intel-x64
            
          - os-name: macOS-arm64
            runs-on: macos-latest
            target: aarch64-apple-darwin
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-macos-apple-arm64
            
          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: yomine-${{ github.event.release.tag_name || inputs.tag_name }}-linux-x64
            
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--release"
          strip: true

      # Debug: List target directory contents to see what was actually built
      - name: List target directory contents
        run: |
          echo "Contents of target directory:"
          ls -la target/ || dir target\ /s
          echo "Contents of target/${{ matrix.platform.target }}:"
          ls -la target/${{ matrix.platform.target }}/ || dir target\${{ matrix.platform.target }}\ /s
          echo "Contents of target/${{ matrix.platform.target }}/release:"
          ls -la target/${{ matrix.platform.target }}/release/ || dir target\${{ matrix.platform.target }}\release\ /s
        shell: bash

      # Prepare binary for all platforms
      - name: Prepare binary (Windows)
        if: matrix.platform.runs-on == 'windows-latest'
        run: |
          copy target\${{ matrix.platform.target }}\release\yomine.exe ${{ matrix.platform.name }}
        shell: cmd

      - name: Prepare binary (Linux)
        if: matrix.platform.runs-on == 'ubuntu-latest'
        run: |
          cp target/${{ matrix.platform.target }}/release/yomine ${{ matrix.platform.name }}
          chmod +x ${{ matrix.platform.name }}
        shell: bash

      - name: Prepare binary (macOS)
        if: matrix.platform.runs-on == 'macos-latest'
        run: |
          cp target/${{ matrix.platform.target }}/release/yomine ${{ matrix.platform.name }}
          chmod +x ${{ matrix.platform.name }}
        shell: bash

      # Upload files to release
      - name: Upload binary to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: ${{ matrix.platform.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Create consolidated checksum file (runs after all binaries are uploaded)
  create-checksums:
    needs: build-and-upload
    runs-on: ubuntu-latest
    
    steps:
      - name: Download release assets
        uses: robinraju/release-downloader@v1.11
        with:        
          repository: ${{ github.repository }}
          tag: ${{ env.TAG_NAME }}
          fileName: "yomine-*"
          out-file-path: "downloads"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate consolidated checksums
        run: |
          cd downloads
          # Generate checksums for all downloaded files
          sha256sum yomine-* > ../SHA256SUMS.txt
          echo "Generated checksums:"
          cat ../SHA256SUMS.txt
        shell: bash

      - name: Upload checksums to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
