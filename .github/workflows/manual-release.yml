name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Type of release"
        required: true
        type: choice
        options:
          - "stable"
          - "beta"
        default: "stable"
      create_release:
        description: "Create the release after validation"
        required: false
        type: boolean
        default: false
      build_only:
        description: "Build binaries without creating release (for testing)"
        required: false
        type: boolean
        default: false
      skip_tests:
        description: "Skip CI test validation (‚ö†Ô∏è Use with caution)"
        required: false
        type: boolean
        default: false

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      computed_version: ${{ steps.compute_version.outputs.version }}
      is_prerelease: ${{ steps.compute_version.outputs.is_prerelease }}
      release_name: ${{ steps.compute_version.outputs.release_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (for scripts)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Warning about skipped tests
        if: ${{ inputs.skip_tests }}
        run: |
          echo "‚ö†Ô∏è WARNING: CI test validation has been skipped!"
          echo "‚ö†Ô∏è This release may contain untested code."
          echo "‚ö†Ô∏è Use this option only when you're confident the code is stable."

      - name: Build-only mode notice
        if: ${{ inputs.build_only }}
        run: |
          echo "üî® BUILD-ONLY MODE: Binaries will be built but no release will be created"
          echo "üì¶ Artifacts will be available for download from the workflow run"

      - name: Check CI status for current commit
        if: ${{ !inputs.skip_tests }}
        uses: actions/github-script@v7
        with:
          script: |
            const { ensureTests } = require('./.github/scripts/ensure-tests.js');
            await ensureTests({ github, context, core });

      - name: Compute version from Cargo.toml and tags
        id: compute_version
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const { computeVersion, buildReleaseName } = require('./.github/scripts/compute-version.js');

            const releaseType = '${{ inputs.release_type }}';

            const cargoPath = path.join(process.env.GITHUB_WORKSPACE, 'Cargo.toml');
            const cargoToml = fs.readFileSync(cargoPath, 'utf8');

            const { version, isPrerelease, baseVersion } = await computeVersion({
              github,
              context,
              cargoToml,
              releaseType,
            });

            const releaseName = buildReleaseName({
              version,
              baseVersion,
              isPrerelease,
            });

            core.setOutput('version', version);
            core.setOutput('is_prerelease', String(isPrerelease));
            core.setOutput('release_name', releaseName);

      - name: Show computed version
        run: |
          echo "Computed version: ${{ steps.compute_version.outputs.version }}"
          echo "Prerelease: ${{ steps.compute_version.outputs.is_prerelease }}"
          echo "Release name: ${{ steps.compute_version.outputs.release_name }}"

  build-only:
    needs: validate
    if: ${{ inputs.build_only }}
    uses: ./.github/workflows/release.yml
    with:
      tag_name: ${{ needs.validate.outputs.computed_version }}
      build_only: true
    secrets: inherit

  create-release:
    needs: validate
    runs-on: ubuntu-latest
    if: ${{ inputs.create_release && !inputs.build_only }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (for scripts)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Create Git Tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ needs.validate.outputs.computed_version }}
          git push origin ${{ needs.validate.outputs.computed_version }}

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.MY_PAT }}
          script: |
            const version = '${{ needs.validate.outputs.computed_version }}';
            const isPrerelease =
              '${{ needs.validate.outputs.is_prerelease }}' === 'true';
            const releaseName = '${{ needs.validate.outputs.release_name }}';

            const releaseBody = isPrerelease
              ? [
                  '**This is a pre-release version for testing purposes.**',
                  '',
                  '‚ö†Ô∏è **Warning**: This beta release may contain bugs and is not recommended for production use.',
                  '',
                  'Please report any issues you encounter on GitHub Issues.',
                  '',
                  '*Release notes will be automatically generated once binaries are built.*',
                ].join('\n')
              : [
                  `Release ${version} of yomine`,
                  '',
                  '*Release notes will be automatically generated once binaries are built.*',
                ].join('\n');

            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: version,
              name: releaseName,
              body: releaseBody,
              draft: false,
              prerelease: isPrerelease,
            });

            console.log(
              `Created ${isPrerelease ? 'pre-' : ''}release: ${release.html_url}`
            );